This demo uses IPEDS data pulled from the Urban Institute API (). We will pull IPEDS directory and financial aid data sets and create plots based on a few fields.
The data include land-grant universities.

## Load Libraries

In this section I am going to show the code block, but notice I am hiding messages and warning. This will produce no output

```{r libs, message=FALSE, warning=FALSE}
library(educationdata)
library(tidyverse)
library(plotly)
library(readxl)
library(ggplot2)
library(hrbrthemes)
library(viridis)
library(ggridges)
```

## Get Data

Here I display a feature that can be helpful for technical documents. The ability to show the code block. The key here is using the `code-fold` and `code-summary` options.

```{r data, message=FALSE, warning=FALSE}
#| code-fold: true
#| code-summary: "Show the code"
####Urban Institute Data Pull
insts <- c(100654,100858,102377,102614,104179,105297,106397,106412,110635,110644,110671,126818,129020,130934,130943,131399,133650,134130,139719,139959,141574,142285,145637,153603,155140,155399,157058,157085,159391,160621,161253,163286,163338,166629,171100,174066,175342,176080,177940,178396,180054,180160,180203,180212,180328,180461,180647,181419,181464,182290,183044,186380,187596,187745,188030,188216,190415,199102,199193,200086,200208,200332,200466,200527,200554,204796,207209,207388,209542,214777,217484,217882,218733,219277,219356,219374,219408,221759,221838,227526,228723,230728,231174,233921,234155,236939,237899,238032,240444,240727,240736,240754,240790,243197,243638,243665,243780,260372,366340,380359,380368,380377,413617,413626,434016,434584,434751,441070,442781)

directory <- get_education_data(
  level = "college-university",
  source = "ipeds",
  topic = "directory",
  filters = list(unitid = insts,
                 year = 2017)) %>%
  mutate(msi = ifelse(hbcu == 1 | tribal_college == 1, "MSI","Not MSI")) %>% #msi flag
  select(unitid, year, opeid, inst_name, fips, inst_size, hbcu, tribal_college, offering_highest_degree, inst_system_flag, msi) #keep relevant fields

#manually adding unitid since land_grant is not a filter and pulling everything would take longer
sfa <- get_education_data(level = "college-university",
    source = "ipeds",
    topic = "sfa-grants-and-net-price",
    filters = list(year = 2017, unitid = insts)) %>% 
  select(unitid, year, type_of_aid, income_level, average_grant, total_grant, net_price, number_of_students, number_receiving_grants) #keep relevant fields

```

## Making a simple plot

In this section I am doing data manipulation and creating a plot. I will hide the code block on the output by adding `echo=FALSE`.  Let's try moving the figure to the margin by adding `#| column: margin`

```{r plot, echo=FALSE, message=FALSE, warning=FALSE}
#| column: margin
fin_aid <- left_join(sfa,directory, by="unitid") %>%
  filter(number_of_students != 0)

fin_aid <- fin_aid %>%
  filter(type_of_aid==9,income_level != 99,opeid != '271100') %>%
  arrange(income_level) %>%
  mutate(income_level_desc = case_when(
    income_level == 1 ~ 'Less than $30,000',
    income_level == 2 ~ '$30,001–$48,000',
    income_level == 3 ~ '$48,001–$75,000',
    income_level == 4 ~ '$75,001–$110,000',
    income_level == 5 ~ '$110,001 or more'
  )) %>%
  filter(average_grant < 30000)

fin_aid$income_level_desc <- factor(fin_aid$income_level_desc, levels=c('Less than $30,000', '$30,001–$48,000', '$48,001–$75,000', '$75,001–$110,000','$110,001 or more')) 

ggplot(fin_aid, aes(x = average_grant, color = income_level_desc, fill = income_level_desc)) +
  geom_density(alpha=0.3) + 
  scale_fill_manual(values=c(
    "#004E60", "#B4BD00", "#66435A","#BA0C2F","#9EA2A2")) + 
  scale_color_manual(values=c(
    "#004E60", "#B4BD00", "#66435A","#BA0C2F","#9EA2A2")) +
  labs(
    title = "Distribution of Average Grants",
    subtitle = "For each school & income level",
    x= "Average Grant",
    y="Density",
    fill = "Family Income Level",
    color = "Family Income Level",
    tag = "Figure 1",
    caption = "IPEDS 2017 submission"
  ) +
  theme_classic() +
  theme(
    axis.title.y = element_blank(),
    axis.text.y=element_blank(),
    axis.ticks.y=element_blank()
  )

```

## Interactive plots in HTML Files

This section displays the 'same' plot but using different packages. One plot is interactive while the other is static.  Interactive plots can be more difficult to format.

::: columns

::: {.column width="50%"}
```{r static, echo=FALSE, message=FALSE, warning=FALSE}
fin_aid2 <- left_join(sfa,directory, by="unitid") %>%
  filter(number_of_students != 0, income_level != 99) %>%
  arrange(income_level) %>%
  mutate(income_level_desc = case_when(
    income_level == 1 ~ 'Less than $30,000',
    income_level == 2 ~ '$30,001–$48,000',
    income_level == 3 ~ '$48,001–$75,000',
    income_level == 4 ~ '$75,001–$110,000',
    income_level == 5 ~ '$110,001 or more'
  ))

fin_aid2$income_level_desc <- factor(fin_aid2$income_level_desc, levels=c('Less than $30,000', '$30,001–$48,000', '$48,001–$75,000', '$75,001–$110,000','$110,001 or more')) 

scat <- ggplot(fin_aid2, aes(x=net_price, y=average_grant, color=income_level_desc)) + 
  geom_point() +
  scale_color_manual(values=c(
    "#004E6080", "#B4BD0080", "#66435A80","#BA0C2F80","#9EA2A280")) + 
  geom_smooth(method = 'lm',
              se=T,
              inherit.aes = F,
              aes(x=net_price, y=average_grant),
              formula = y~x,
              color = "#000000") +
    labs(
    title = "Scatterplot of Net Price and Average Grant",
    subtitle = "For each school & income level",
    x= "Net Price (dollars)",
    y="Average Grant (dollars)",
    #fill = "Family Income Level",
    color = "Family Income Level",
    tag = "Figure 2",
    caption = "IPEDS 2017 submission"
  ) +
  theme_classic()

scat
```
:::

::: {.column width="50%"}
```{r interactive, echo=FALSE, message=FALSE, warning=FALSE}
fl <- lm(average_grant ~ net_price, data=fin_aid2)

fig <- plot_ly(data=fin_aid2,
               type = 'scatter',
               mode = 'markers',
               x= ~net_price,
               y = ~average_grant,
               color=~income_level_desc,
               text=~paste(inst_name,"<br>Income:",income_level_desc)) %>%
  add_lines(x = ~net_price, y=fitted(fl)) %>%
  layout(showlegend = F)
fig
```
:::
:::